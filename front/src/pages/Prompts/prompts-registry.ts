import type { PromptMeta } from '../../components/prompts';

// Static registry generated by Vite's import.meta.glob
// We load metadata by importing the modules eagerly, but lazy-load component bodies in the detail page

const modules = import.meta.glob('../../components/prompts/**/*.tsx', { eager: true });

export type PromptEntry = PromptMeta & {
  // Path to module, for dynamic import later
  modulePath: string;
};

const entries: PromptEntry[] = Object.entries(modules).flatMap(([path, mod]) => {
  const anyMod = mod as any;
  const meta: PromptMeta | undefined = anyMod.meta;
  if (!meta) return [];
  return [{ ...meta, modulePath: path }];
});

// Sort by title for stable order
entries.sort((a, b) => a.title.localeCompare(b.title));

export const promptsList: PromptEntry[] = entries;

export function findPromptBySlug(slug: string): PromptEntry | undefined {
  return promptsList.find(p => p.slug === slug);
}
