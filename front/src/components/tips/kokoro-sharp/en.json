{
  "kokoro-sharp": {
    "title": "KokoroSharp",
    "shortDescription": "Local C# TTS engine powered by ONNX: multi‑voice, multilingual, plug‑and‑play.",
    "content": {
      "mainTitle": "KokoroSharp: fast local, cross‑platform TTS",
      "intro": "KokoroSharp is a C# inference engine for Kokoro TTS using ONNX Runtime. It synthesizes speech locally/offline with multiple voices and languages supported.",
      "sections": {
        "installation": {
          "title": "Installation",
          "nugetCpu": "# .NET CLI\ndotnet add package KokoroSharp.CPU",
          "note": "For GPU acceleration, see RUNNING_ON_GPU.md in the GitHub repo. Official voices (Hexgrad Kokoro 82M v1.0) are included in the NuGet package."
        },
        "gettingStarted": {
          "title": "Getting started",
          "codeBasic": "using KokoroSharp;\n\n// Load or download the model (~320MB for full precision)\nKokoroTTS tts = KokoroTTS.LoadModel();\n\n// Pick a voice (included in the nuget package)\nKokoroVoice heart = KokoroVoiceManager.GetVoice(\"af_heart\");\n\n// Speak a sentence (language detection is automatic based on the voice)\ntts.SpeakFast(\"Hello world\", heart);\n"
        },
        "examples": {
          "streaming": {
            "title": "Segment streaming",
            "code": "using KokoroSharp;\nusing System.Threading.Channels;\n\nvar tts = KokoroTTS.LoadModel();\nvar voice = KokoroVoiceManager.GetVoice(\"af_alloy\");\n\n// Stream segments as they are synthesized\nawait foreach (var segment in tts.StreamSegmentsAsync(\"Long text to read\", voice))\n{\n    // segment.Audio contains PCM bytes you can enqueue to a player\n    Console.WriteLine($\"Received segment: {segment.Index}, {segment.DurationMs}ms\");\n}"
          },
          "voiceMixing": {
            "title": "Voice mixing",
            "code": "using KokoroSharp;\n\nvar tts = KokoroTTS.LoadModel();\nvar mix = new KokoroVoiceMix()\n    .Add(KokoroVoiceManager.GetVoice(\"af_heart\"), weight: 0.6f)\n    .Add(KokoroVoiceManager.GetVoice(\"af_alloy\"), weight: 0.4f);\n\ntts.SpeakFast(\"Real-time voice mixing\", mix);\n"
          }
        },
        "features": {
          "title": "Key features",
          "table": { "headers": ["Feature", "Description"] }
        },
        "notes": {
          "title": "Notes and best practices",
          "items": [
            "Language detection is automatic based on the loaded voice.",
            "The 'voices' folder is copied automatically to the build output.",
            "Integrated phonemization uses eSpeak NG depending on platform.",
            "You may load a specific model via KokoroTTS.LoadModel(path).",
            "Built‑in tokenization can be bypassed if you provide phonemes."
          ]
        }
      },
      "features": {
        "rows": [
          { "feature": "Plug & Play (NuGet)", "value": "Dependencies handled automatically" },
          { "feature": "Bundled voices", "value": "Official Hexgrad Kokoro 82M v1.0 voices" },
          { "feature": "High‑level interface", "value": "Simple API for all users" },
          { "feature": "Segment streaming", "value": "Progressive synthesis for snappy UX" },
          { "feature": "Voice mixing", "value": "Combine multiple voices with arbitrary weights" },
          { "feature": "Linear scheduling", "value": "Job scheduling and audio queue" },
          { "feature": "Multi‑platform playback", "value": "Optional playback integration" }
        ]
      },
      "footer": {
        "sourcesLabel": "Sources:",
        "writtenOn": "Written on {{date}}"
      }
    }
  }
}
